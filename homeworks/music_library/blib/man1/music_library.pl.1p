.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "MUSIC_LIBRARY 1"
.TH MUSIC_LIBRARY 1 "2017-01-09" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME Music Library \- Program, that paints table of music tracks"
.IX Header "NAME Music Library - Program, that paints table of music tracks"
.SH "VERSION Version 1.00"
.IX Header "VERSION Version 1.00"
.SH "SYNOPSIS ./music_library.pl [options]"
.IX Header "SYNOPSIS ./music_library.pl [options]"
\&\fBOptions\fR:
.PP
.Vb 10
\&    \-\-help
\&    \-\-band    only_this_band
\&    \-\-year    only_this_year
\&    \-\-album   only_this_album
\&    \-\-track   only_this_track
\&    \-\-format  only_this_format
\&    \-\-sort    [column_for_sorting]
\&        columns: band, year, album, track, format
\&    \-\-columns [columns_order_output]
\&        columns: band, year, album, track, format
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR Print a brief help message and exits." 4
.IX Item "--help Print a brief help message and exits."
.PD 0
.IP "\fB\-\-band\fR Will be print only this band's tracks" 4
.IX Item "--band Will be print only this band's tracks"
.IP "\fB\-\-year\fR Will be print only this year's albums" 4
.IX Item "--year Will be print only this year's albums"
.IP "\fB\-\-album\fR Will be print only this album's tracks" 4
.IX Item "--album Will be print only this album's tracks"
.IP "\fB\-\-track\fR Will be print only this tracks" 4
.IX Item "--track Will be print only this tracks"
.IP "\fB\-\-format\fR Will be print only this format's tracks" 4
.IX Item "--format Will be print only this format's tracks"
.IP "\fB\-\-sort\fR Sorting table by this column columns: band, year, album, track, format" 4
.IX Item "--sort Sorting table by this column columns: band, year, album, track, format"
.IP "\fB\-\-columns\fR (optional) Declare order of output table columns columns: band, year, album, track, format" 4
.IX Item "--columns (optional) Declare order of output table columns columns: band, year, album, track, format"
.PD
.SH "DESCRIPTION \fBThis program\fP will read the given input string(s) and create and output the table of music tracks."
.IX Header "DESCRIPTION This program will read the given input string(s) and create and output the table of music tracks."
